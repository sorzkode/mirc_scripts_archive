;IRCop checkers [BEGIN]
/ccircops { if (Status isin $active) { halt } | else set %iws 0 | echo 4 -a Listing IRCopz on # $+ ! | .enable #ccircops | .who # } 
/gcircops { set %p 0 | echo 4 -s Listing all visible IRCops on NETWORK! | .enable #gcircops | .who 0 o }
;IRCop checkers [END]
/banip { if ($1 == $null) { echo 2 -a *** /banip missing parameter: nick } | else .disable #dns1 | .enable #dns2 | dns $1 | set %chan # }
/kacs { if ($1 == $null) { echo -a Usage: /kacs [mask/nick] (optional msg) } | echo 6 -a Now kicking $1 from EVERY channel that I have opz on and that $nick is on! | set %i 0 | :doit | inc %i | if ($channel(%i) == $null) { unset %i | goto done } | if (($me isop $channel(%i)) && ($1 ison $channel(%i))) { if ($2 != $null) { kick $channel(%i) $1- | else kick $channel(%i) You better hope to god you ain't in anymore of my channels! } } | goto doit | :done }
;Channel commands [BEGIN]
/op { if (* isin $1) { set %leen $len($1) - 1 | set %e 0 | goto wild } | if (* !isin $1) { goto reg }
  :wild | goto startwild | :startwild | inc %e | if (%e > $nick(0,#)) { unset %e | halt } | if ($left(%leen,$1) isin $nick(%e,#)) && ($me isop $chan) { mode # +o $nick(%e,#) | goto startwild }
  else goto startwild | :reg | if ($1 ison $chan) && ($1 !isop $chan) && ($me isop $chan) { mode # +o $1 }
}
/deop {
  if (* isin $1) unset %len | set %len $len($1) - 1 | goto wild | if (* !isin $1) goto reg | :wild | set %e 0 | goto startwi | :startwi
  inc %e | if (%e > $nick(0,$chan)) { unset %e | halt } | if ($left(%len,$1) isin $nick(%e,$chan)) && ($nick(%e,$chan) isop $chan) { mode # -o $nick(%e,$chan) | goto startwi } | else goto startwi
  :reg | if ($1 ison $chan) && ($1 isop $chan) && ($me isop $chan) { mode # -o $1 }
}
/k {
  if (* isin $1) { set %sn 0 | set %len $len($1) | set %len1 %len - 1 | goto wild } | if (* !isin $1) { goto reg }
  :wild | goto wstart | :wstart
  inc %sn | if (%sn > $nick(0,$chan)) { unset %sn | halt } | if ($left(%len1,$1) isin $nick(%sn,$chan)) && ($me isop $chan) { kick # $nick(%sn,$chan) Wild card kick ŸMaLum v $+ $ver by PyroMan!Ÿ | goto wstart } | else goto wstart | :reg
  if ($1 ison $chan) && ($me isop $chan) && (*2 == $null) { kick # $1 MaLum v $+ $ver kick by PyroMan and KRAkeR! } 
  if ($1 ison $chan) && ($me isop $chan) && (*2 != $null) { kick # $1 $2- } 
}
/v { if (* isin $1) { set %leen $len($1) - 1 | set %e 0 | goto wild } | if (* !isin $1) { goto reg }
  :wild | goto startwild | :startwild | inc %e | if (%e > $nick(0,#)) { unset %e | halt } | if ($left(%leen,$1) isin $nick(%e,#)) && ($me isop $chan) { mode # +v $nick(%e,#) | goto startwild }
  else goto startwild | :reg | if ($1 ison $chan) && ($me isop $chan) { mode # +v $1 }
}
/dev {
  if (* isin $1) { set %leen $len($1) - 1 | set %e 0 | goto wild } | if (* !isin $1) { goto reg }
  :wild | goto startwild | :startwild | inc %e | if (%e > $nick(0,#)) { unset %e | halt } | if ($left(%leen,$1) isin $nick(%e,#)) && ($me isop $chan) { mode # -v $nick(%e,#) | goto startwild }
  else goto startwild | :reg | if ($1 ison $chan) && ($me isop $chan) { mode # -v $1 }
}
/m /if ($me isop #) { mode # $1- } | /else { echo 2 -a *** Error: You need to be oped on # $+ ! }
/b /ban # $1 $2
/clearmode /set %safemode $chan(#).mode | /set %lenm $len($chan(#).mode) | /set %lenm1 %lenm - 1 | /raw -q mode # - $+ $right(%lenm1,$chan(#).mode) | /unset %lenm* 
/gcmode /set %lenm $len(%safemode) | /set %lenm1 %lenm - 1 | /raw -q mode # + $+ $right(%lenm1,%safemode) | /unset %safemode | unset %len*
/clearumode /set %safemode $usermode | /set %lenm $len($usermode) | /set %lenm1 %lenm - 1 | /raw -q mode $me - $+ $right(%lenm1,$usermode) | /unset %len* 
/gumode /set %lenm $len(%safemode) | /set %lenm1 %lenm - 1 | /raw -q mode $me + $+ $right(%lenm1,%safemode) | /unset %safemode | /unset %len*
/banipall { set %i 0 | :start | inc %i | if (%i > $nick(0,#)) { goto end } | if ($nick(%i,#) == $me) { goto start } | banip $nick(%i,#) | goto start | :end | unset %i | halt }
/kball { set %i 0 | :start | inc %i | if (%i > $nick(0,#)) { goto end } | if ($nick(%i,#) == $me) { goto start } | ban # $nick(%i,#) | kick # $nick(%i,#) Bloop! | goto start | :end | unset %i | halt }
/banall { set %i 0 | :start | inc %i | if (%i > $nick(0,#)) { goto end } | if ($nick(%i,#) == $me) { goto start } | ban # $nick(%i,#) | goto start | :end | unset %i | halt }
;Channel commands [END]
;Mass commands [BEGIN]
/mop { .disable #regno | .enable #mno | set %i 0 | set %chan # | set %num 1 | :start | set %user $nopnick(%i ,%chan) | if (%user == $null)  { raw -q mode %chan +oooooo %nick | unset %nick | unset %y | unset %chan | unset %num | goto end } | if (%user != $me) { set %nick %user %nick | if (%num == 6) { raw -q mode %chan +oooooo %nick | unset %nick | set %num 0 } } | inc %i 1 | inc %num 1 | goto start | :end | .timer 1 5 /.disable #mno | .timer 1 6 /.enable #regno }
/mdop { .disable #regno | .enable #mno | set %i 0 | set %chan # | set %num 1 | :start | set %user $opnick(%i ,%chan) | if (%user == $null)  { raw -q mode %chan -oooooo %nick | unset %nick | unset %y | unset %chan | unset %num | goto end } | if (%user != $me) { set %nick %user %nick | if (%num == 6) { raw -q mode %chan -oooooo %nick | unset %nick | set %num 0 } } | inc %i 1 | inc %num 1 | goto start | :end | .timer 1 5 /.disable #mno | .timer 1 6 /.enable #regno }
/mv { .disable #regno | .enable #mno | set %i 0 | set %chan # | set %num 1 | :start | set %user $nvnick(%i ,%chan) | if (%user == $null)  { raw -q mode %chan +vvvvvv %nick | unset %nick | unset %y | unset %chan | unset %num | goto end } | if (%user != $me) { set %nick %user %nick | if (%num == 6) { raw -q mode %chan +vvvvvv %nick | unset %nick | set %num 0 } } | inc %i 1 | inc %num 1 | goto start | :end | .timer 1 5 /.disable #mno | .timer 1 6 /.enable #regno }
/mdev { .disable #regno | .enable #mno | set %i 0 | set %chan # | set %num 1 | :start | set %user $vnick(%i ,%chan) | if (%user == $null)  { raw -q mode %chan -vvvvvv %nick | unset %nick | unset %y | unset %chan | unset %num | goto end } | if (%user != $me) { set %nick %user %nick | if (%num == 6) { raw -q mode %chan -vvvvvv %nick | unset %nick | set %num 0 } } | inc %i 1 | inc %num 1 | goto start | :end | .timer 1 5 /.disable #mno | .timer 1 6 /.enable #regno }
;Mass commands [END]
/clock /say Did ya know it's $contime($time) where $me lives???? | unset %hr* | unset %sub* | unset %min*
/unbanme /.enable #unbanme | /.mode # b
/view /run c:\windows\notepad.exe $1
/banlist { if ($1 == -c) { set %option -c |  /.disable #chanstats | /.disable #unbanme | /.enable #banlist | /set %bchan # | /msg %bchan 4*** %bchan $+ : Banlist start! | .mode # b  | halt } | if ($1 == -e) { set %option -e |  /.disable #chanstats | /.disable #unbanme | /.enable #banlist | /echo 4 -a *** # $+ : Banlist start! |  set %bchan # | .mode # b } }
/unbanall /.disable #unbanme | /.disable #chanstats | /.disable #banlist | /.enable #unbanall | /.mode # b
/colortest2 { set %i 0 | echo $r(1,15) -a ! | :loop | if (%i > 79) { goto down } | inc %i | echo $r(1,15) -a $str(%i,!) | goto loop | :down | dec %i | if (%i < 1) { unset %i | halt } | echo $r(1,15) -a $str(%i,!) | goto down } 
/filter { set %i 0 | :lopp | inc %i | if (%i > $nick(0,#)) { unset %i | halt } | if ($nick(%i,#) == $me) { goto lopp } | if ($1 isin $nick(%i,#)) || ($1 isin $address($nick(%i,#),1)) { kick # $nick(%i,#) Filter: $1 [5MaLum $ver] } | goto lopp }
/search { if ($1 == -e) { set %w 0 | echo 1 -a 3Searching 6For 5 $+ $2 $+  | set %search *2 | set %sop -e | .enable #search | .who # } | if ($1 == -c) { set %w 0 | msg # 3Searching 6For 5 $+ $2 $+  | set %search *2 | set %sop -c | .enable #search | .who # } }
/month { set %month $token(1,47,$adate) | if (%month == 1) { return January } | if (%month == 2) { return February } | if (%month == 3) { return March } | if (%month == 4) { return April } | if (%month == 5) { return May } | if (%month == 6) { return June } | if (%month == 7) { return July } | if (%month == 8) { return August } | if (%month == 9) { return September } | if (%month == 10) { return October } | if (%month == 11) { return November } | if (%month == 12) { return December } }
/join { /set %jointime $ctime | join $1- }
/contime {
  if ($token(1,58,$1) == 0) { set %time 1 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time }
  if ($token(1,58,$1) == 1) { set %time 1 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 2) { set %time 2 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 3) { set %time 3 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time }
  if ($token(1,58,$1) == 4) { set %time 4 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 5) { set %time 5 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time }
  if ($token(1,58,$1) == 6) { set %time 6 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 7) { set %time 7 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time }
  if ($token(1,58,$1) == 8) { set %time 8 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 9) { set %time 9 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 10) { set %time 10 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time }
  if ($token(1,58,$1) == 11) { set %time 11 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time } | if ($token(1,58,$1) == 12) { set %time 12 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time }
  if ($token(1,58,$1) == 13) { set %time 1 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } |  if ($token(1,58,$1) == 14) { set %time 2 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time }
  if ($token(1,58,$1) == 15) { set %time 3 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 16) { set %time 4 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 17) { set %time 5 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time }
  if ($token(1,58,$1) == 18) { set %time 6 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 19) { set %time 7 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 20) { set %time 8 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time }
  if ($token(1,58,$1) == 21) { set %time 9 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 22) { set %time 10 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 23) { set %time 11 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) PM | return %time } | if ($token(1,58,$1) == 24) { set %time 12 $+ : $+ $token(2,58,$1) $+ : $+ $token(3,58,$1) AM | return %time }
}
/cls /clear
/fakereply { if ($1 == $null) || ($2 == $null) || ($3- == $null) { echo 2 -a *** Usage: /fakereply <person> <what CTCP, VERSION, etc...> <What to say> | halt } | raw -q notice $1 : $+ $chr(1) $+ $2 $3- $+ $chr(1) }
/portscan { .enable #portscan | /echo 4 -s *** Scanning for all visible ports on $server $+ ! | set %portserv $server | /.stats l $1 } 
/kick {
  if ($chr(35) isin $1) && ($me isop $1) && ($2 ison $1) { if ($3- != $null) { kick $1 $2 $3- } | if ($3- == $null) { kick $1 $2 $me } }
  if ($chr(35) !isin $1) && ($me isop $chan) && ($1 ison $chan) { if ($2- != $null) { kick # $1 $2- } | if ($2- == $null) { kick # $1 No Comment. } }
}
;Voting Booth [BEGIN]
/startvote { .enable #vote | set %vote.yes 0 | set %vote.no 0 | set %vote.maybe 0 | .enable #vote
  set %vote.topic $$?="Voting topic:" | set %vote.time $$?="How long to vote?" | .timer 1 %vote.time /endvote | /say 4*** Voting Booth has been opened!
  say 2*** Vote topic is: %vote.topic $+  | say *** You have $duration(%vote.time) to vote! | /say *** Vote by typing: /notice $me Vote [YES|NO|MAYBE]
}
/endvote { .rlevel 93 | unset %vote.what.* | say 4*** Voting Booth is now CLOSED! | say *** Topic was: $u(%vote.topic) | /say $c(2,Yes Votes:) %vote.yes | /say $c(2,No Votes:) %vote.no | /say $c(2,Maybe Votes:) %vote.maybe 
if (%vote.yes > %vote.no) && (%vote.yes > %vote.maybe) { set %vote.major Yes! } | if (%vote.no > %vote.yes) && (%vote.no > %vote.maybe) { set %vote.major No! } | if (%vote.maybe > %vote.yes) && (%vote.maybe > %vote.no) { set %vote.major Maybe! } | if (%vote.major == $null) { set %vote.major Nobody voted! } | msg # $c(2,Majority vote:) %vote.major | unset %vote.* | .disable #vote }   
;Voting Booth [END]
/glclone {
  if ($1 == $null) || ($2 == $null) { /echo 2 -a *** Format: /gclones [-c|-e] [nick to look up clones on] | halt }
  if ($1 == -e) { .disable #gcircops | .disable #whois | unset %name | unset %names | unset %i | unset %nums | .enable #mclone | set %mc echo $active | /whois $2 | %mc Scanning for clones on " $+ $address($2,2) $+ " } 
  if ($1 == -c) { .disable #gcircops | .disable #whois | unset %name | unset %names | unset %i | unset %nums | .enable #mclone | set %mc msg # | /whois $2 | %mc Scanning for clones on " $+ $address($2,2) $+ " }
}
;Channel stats [BEGIN]
/chanstats {
  unset %ircops.* | unset %cloners.* | unset %addys | set %totalbans 0 | set %ircops.1 0 | set %gonersss 0 | set %herersss 0 | set %cloners.1 0 | unset %addys | set %ticks.1 $ticks | set %timein $ctime | set %cloners.3 0 | set %cloners.4 0  
  if ($1 == -c) { set %shun msg # | set %list 0 | set %permops $opnick(0,#) * 100 | set %perallops %permops / $nick(0,#) | set %peroprem %permops % $nick(0,#) | set %permnops $nopnick(0,#) * 100 | set %perallnops %permnops / $nick(0,#) | set %permnoprem %permnops % $nick(0,#) | set %permvs $vnick(0,#) * 100 | set %perallvs %permvs / $nick(0,#) | set %pervrem %permvs % $nick(0,#)  
  set %permnvs $nvnick(0,#) * 100 | set %perallnvs %permnvs / $nick(0,#) | set %pernvrem %permnvs % $nick(0,#) | chaninfo.1 }
  if ($1 == -e) { set %shun echo 2 | set %list 0 | set %permops $opnick(0,#) * 100 | set %perallops %permops / $nick(0,#) | set %peroprem %permops % $nick(0,#) | set %permnops $nopnick(0,#) * 100 | set %perallnops %permnops / $nick(0,#) | set %permnoprem %permnops % $nick(0,#) 
  set %permvs $vnick(0,#) * 100 | set %perallvs %permvs / $nick(0,#) | set %pervrem %permvs % $nick(0,#) | set %permnvs $nvnick(0,#) * 100 | set %perallnvs %permnvs / $nick(0,#) | set %pernvrem %permnvs % $nick(0,#) | chaninfo.1 }
}
/chaninfo.1 { set %chitim $nick(0,#) / 2 | echo 4 # *** Gathering channel information for # $+ ! (Wait $duration(%chitim) $+ ) | .enable #chanstatss | /.enable #chanbans | /.who # | /.timer 1 %chitim /chaninfo.2 }
/chaninfo.2 {
  set %ticks.2 [ $ticks - %ticks.1 ] | set %total [ $ctime - %timein ] | unset %timein | unset %ticks.1
  :start | %shun 5Channel information for: # $+ ! $+ 
  %shun Users: $nick(0,#) (Gone: %gonersss $+ / $+ $nick(0,#) 4- Here: %herersss $+ / $+ $nick(0,#) $+ )
  %shun Ops: $opnick(0,#)  ( $+ %perallops $+ . $+ %peroprem $+ % $+ ) 4- Non-Ops: $nopnick(0,#) ( $+ %perallnops $+ . $+ %permnoprem $+ % $+ )
  %shun Voiced: $vnick(0,#) ( $+ %perallvs $+ . $+ %pervrem $+ % $+ ) 4- Non-Voiced: $nvnick(0,#) ( $+ %perallnvs $+ . $+ $left(1,%permnvs) $+ % $+ )
  set %cloners.4 %cloners.2 % $nick(0,#) | set %ircops.4 %ircops.2 % $nick(0,#)  
  %shun IRCops: %ircops ( $+ %ircops.3 $+ . $+ %ircops.4 $+ % $+ ) 4- Clones: %cloners.1 ( $+ %cloners.3 $+ . $+ %cloners.4 $+ % $+ ) | %shun 5Total process time:  %ticks.2 ticks or $duration(%total) 
  :end | unset %shun | unset %ircops | unset %herer* | unset %goner* | unset %per* | unset %ticks.* | unset %total
}
;Channel stats [END]
/f1 /set %cnum $$?="Number of CTCP's till ignore starts:"
/f2 /set %mnum $$?="Number till Mass protect starts:"
/f4 /join %inchan | /unset %inchan
/f3 /echo 2 -s *** Global CTCP ignore/silence activated! | /echo 2 -s *** Press F5 to remove this. | /silence - $+ *!*@*.* | /.ignore -t *!*@*.*
/f5 /ignore -r *!*@*.* | /silence - $+ *!*@*.*
/email /.auser 660 $me | /set %email.to $$?="To who?" | /set %email.from $$?="From?" | /set %email.topic $$?="Subject:" | /set %email.data $$?="Email data:" | /.enable #mailer | /raw -q privmsg $me : $+ $chr(1) $+ DCC CHAT CHAT $longip(206.28.156.34) 25 $+ $chr(1) 
/emailbomb /.auser 661 $me | /set %emailb.to $$?="To who?" | /set %emailb.many $$?="How many bombs?" | /set %emailb.from $$?="From who? (Lie)" | /set %emailb.data $$?="Short emailbomb msg" | /.enable #emailb | /raw -q privmsg $me : $+ $chr(1) $+ DCC CHAT CHAT $longip(206.28.156.34) 25 $+ $chr(1)  
/rawclone /if ($1 == $null) { .auser 662 $me | .disable #dns1 | .enable #rawdns | dns $$?="Enter a server to connect raw clone to: " | halt } | :start | /.auser 662 $me | /.disable #dns1 | /.enable #rawdns | /dns $1 
/sns /unset %ppl | /set %plm 0 | :startit | inc %plm | if (%plm > $nick(0,#)) { goto end } | if (%ppl == $null) { set %ppl $nick(%plm,#) | goto startit } | else { set %ppl %ppl $+ , $+ $nick(%plm,#) | goto startit } | :end | /return %ppl | unset %ppl | unset %plm
/sops /unset %pplo | /set %plm1 0 | :startit | inc %plm1 | if (%plm1 > $opnick(0,#)) { goto end } | if (%pplo == $null) { set %pplo @ $+ $opnick(%plm1,#) | goto startit } | else { set %pplo %pplo $+ , $+ @ $+ $opnick(%plm1,#) | goto startit } | :end | /if (%pplo == $null) { /return No ops! } | /return %pplo | unset %pplo | unset %plm1
/snops /unset %pplno | /set %plm2 0 | :startit | inc %plm2 | if (%plm2 > $nopnick(0,#)) { goto end } | if (%pplno == $null) { set %pplno $nopnick(%plm2,#) | goto startit } | else { set %pplno %pplno $+ , $+ $nopnick(%plm2,#) | goto startit } | :end | /if (%pplno == $null) { /return No nonops! } | /return %pplno | unset %pplno | unset %plm2
/svs /unset %pplv | /set %plm3 0 | :startit | inc %plm3 | if (%plm3 > $vnick(0,#)) { goto end } | if (%pplv == $null) { set %pplv + $+ $vnick(%plm3,#) | goto startit } | else { set %pplv %pplv $+ , $+ + $+ $vnick(%plm3,#) | goto startit } | :end | /if (%pplv == $null) { /return No voiced users! } | /return %pplv | unset %pplv | unset %plm3
/snvs /unset %pplnv | /set %plm4 0 | :startit | inc %plm4 | if (%plm4 > $nvnick(0,#)) { goto end } | if (%pplnv == $null) { set %pplnv $nvnick(%plm4,#) | goto startit } | else { set %pplnv %pplnv $+ , $+ $nvnick(%plm4,#) | goto startit } | :end | /if (%pplnv == $null) { /return No nonvoiced users! } | /return %pplnv | unset %pplnv | unset %plm4
/global { set %global.msg *1 | set %global.var 3 | set %global.w on | .enable #global | who }
/ccheck /set %how.many $nick(0,#) | /set %how.many %how.many / 2 | /.timer78 1 %how.many /ccheck2 $1 | /who # | /unset %how.many
/ccheck2 { if ($1 == -e) { set %option echo } | if ($1 == -c) { set %option msg # }
  %option 3Scanning for clones 2on: # | set %chanclones 0 | set %counter 1 | set %total $nick(0,#) | :init
  if (%counter <= %total) { set %site $remove($address($nick(%counter,#),2),*!*@) | inc %clone. [ $+ [ %site ] ]
    if (%clone. [ $+ [ %site ] ] = 2) { %option Clone! %clonenick. [ $+ [ %site ] ] | %option Clone! $address($nick(%counter,#),5) | /inc %chanclones 2 }
    elseif (%clone. [ $+ [ %site ] ] > 2) { %option Clone! $address($nick(%counter,#),5) | /inc %chanclones 1 } | else { set %clonenick. $+ %site $address($nick(%counter,#),5) } | inc %counter | goto init
  } | if (%chanclones != 0) { %option 3Total: %chanclones clones } | else { %option No clones detected } | :unset | unset %option %clone.* %counter %chanclones %site %total %clonenick.*
}
/idomain /if ($1 == $null) { /set %idomain $$?="Domain to mass invite" | goto end } | /set %idomain $$1 | :end | /set %idomain.chan # | /.enable #idomain | /who * $+ $$1 $+ * 
/ccheck3 { .enable #clone | if ($1 == -c) { set %option msg # } | else { set %option echo 5 $active } | %option < $+ 6 $+ $rcaps(Clone Detector) $+  $+ > Searching for clones on # | .who # }
/update { unset %channels | set %io.st 0 | set %io.tt $channel(0) | :start | inc %io.st | if (%io.st > %io.tt) { goto end } | if (%channels == $null) { set %channels $channel(%io.st) | goto start } | else set %channels %channels $+ $chr(32) $+ $channel(%io.st) | goto start 
  :end | unset %time | unset %chitime | unset %month | titlebar $chr(91) $+ MaLum v $+ $ver $+ $chr(93) - [t]: $contime($time) [c]: %channels [n]: $me [s]: $server  
}
/checkmail { set %pop.host $$?="POP host IP:" | set %pop.user $$?="Username:" | set %pop.pass $$?="Password:"  | .auser 663 $me | .creq auto | .enable #checkmail | raw -q privmsg $me : $+ $chr(1) $+ DCC CHAT CHAT $longip(%pop.host) 110 $+ $chr(1) }
/seemail {
  if (MaLum Mail Checker == $null) { echo 4 $active Not connected to mail server | halt }
  if ($1 == $null) { echo 4 MaLum Mail Checker *** Syntax : /seemail <message-number $chr(124) all> }
  elseif ($1 == all) { set %mail.counter 1 | getmail | .timer653 0 7 getmail }
  else { msg = $+ $me retr $1 }
}
/getmail { if (%mail.counter <= %mail.messages) { msg = $+ $me RETR %mail.counter | inc %mail.counter } | else { .timer653 off | unset %mail.counter } }
/idle /if ($away == $true) { halt } | else set %server $server | set %port $port | if ($idle >= 600) { .timer3 off | set %idlewhat on | .timer49 0 600 /ame is away: Auto Away after 10 minutes Ÿ5MaLumŸ | /ame is away: Auto Away after 10 minutes Ÿ5MaLumŸ | /away Auto away after 10 minutes }
/start.malum.now { clear Status Window | echo 2 -s $str(10,$chr(0160)) 9,1MaLum v $+ $ver by PyroMan and KRAkeR! | echo 1 -s   | echo 1 -s 4Initiating self status... | /echo 1 -s   | /echo 2 -s 5Nick: $me | /echo 2 -s 5Server: $server 3( $+ $port $+ ) | /echo 2 -s 5IP: $ip ( $+ $longip($ip) $+ ) | /echo 2 -s 5Host: $host | 
  echo 1 -s   | echo 1 -s 4Initiating script status... | /echo 1 -s   | /echo 2 -s 6Mass number: %mnum | /echo 2 -s 6Max. number of CTCPs: %cnum | /echo 2 -s 6Deop serverops: %serop | /echo 2 -s 6Op serverdeops: %serdeop | /echo 2 -s 6Filter: %filt | /echo 2 -s 6Swear kick: %swear | /echo 2 -s 6Filter wordz: %filter | /echo 2 -s 6Fserve trigger: %fserve | /echo 2 -s 6Caps kick: %cccaps | /echo 2 -s 6BURC kick: %ckick | /echo 2 -s 6Repeat kick: %rpet 
  echo 2 -s 6Auto-Update IAL on join: %uial | /echo 2 -s 6Take revenge: %revenge | /echo 2 -s 6Mass deop/kick/ban pro: %mdop %mkick %mban | /echo 2 -s 6Auto check for IRCops on connect: %aircops | /echo 2 -s 6Clone kick on join: %cljoin | /echo 2 -s 6Max. number of clones: %clonesall 
  echo 2 -s 6Pingkick: %pingkick | /unset %pop.* | set %server $server | set %port $port
} 
/isme /if ($$1 == $me) || ($address($$1,2) == $address($me,2)) { return $true } | else { return $false }
/isbot /if ($$1 == W) && ($address($$1,1) == W@channels2.undernet.org) || ($$1 == X) && ($address($$1,1) == X@channels.undernet.org) || ($$1 == ChanSvr) && ($address($$1,3) == ChanSvr@*.Undernet.org) || ($$1 == ChanServ) && ($address($$1,3) == ChanServ@*.Dal.net) { return $true } | else { return $false }
/slag /set %slag $ticks | /raw -q Talk To Me You God Damn Server! | /.disable #421 | /.enable #slag
/ver { return $readini $mircdirver.ini Misc Version }
/homepage { return $readini $mircdirver.ini Misc Homepage }  
/year { set %year.end $token(3,47,$adate) | set %year.front 19 | if (%year.end < 90) set %year.front 20 | set %year.fron %year.front $+ %year.end | .timer 1 10 /unset %year.* | return %year.fron }
;State Of The Art Shitlist [BEGIN]
/shitlist { 
  if ($address($1,3) == $null) { echo 2 -a *** Error: Can't add $1 to shitlist because address could not be found! | halt } 
  else { goto allitnow }
  :allitnow
  writeini $mircdirver.ini Shitonoff $address($1,3) On
  if ($2 == *) { writeini $mircdirver.ini Shitchans $address($1,3) * }
  if ($chr(35) isin $2) { writeini $mircdirver.ini Shitchans $address($1,3) $$?="Enter channel name again:"  } 
  if ($3- == $null) { writeini $mircdirver.ini Shitlist $address($1,3) No message supplied! ( $+ $day $+ , $month $contime($time) $+ ) | goto sall } 
  if ($3- != $null) { writeini $mircdirver.ini Shitlist $address($1,3)  $3- ( $+ $day $+ , $month $contime($time) $+ ) | goto sall } 
  :sall
  if ($2 == *) { set %lkop 0 | goto startglobal }
  if ($me isop $2) && ($1 ison $2) { ban $2 $1 3 | kick $2 $1 4Shitlisted! $readini $mircdirver.ini Shitlist $address($1,3) | halt }  
  else { halt }
  :startglobal
  inc %lkop
  if (%lkop > $channel(0)) { unset %lkop | halt }
  if ($chr(35) isin $comchan($1,%lkop)) && ($me isop $comchan($1,%lkop)) && ($1 ison $comchan($1,%lkop)) { ban $comchan($1,%lkop) $1 3 | kick $comchan($1,%lkop) $1 $readini $mircdirver.ini Shitlist $address($1,3) | goto startglobal } 
  else { goto startglobal }
}
/rshitlist { echo 2 -s *** Removed $1 from shitlist | .remini $mircdirver.ini Shitchans $address($1,3) $2 | .remini $mircdirver.ini Shitonoff $address($1,3) | .remini $mircdirver.ini Shitlist $address($1,3) }
/shitchans /return $readini $mircdirver.ini Shitchans $$1
/shitswitch {
  if ($address($1,3) == $null) { echo 2 -a *** Error: Can not find address for $1 $+ ! | halt }
  if ($2 == $null) { echo 2 -a *** Error: Missing value for shitlist ... /shitlist <nick> <on/off> | halt }
  if ($2 == on) { writeini $mircdirver.ini Shitonoff $address($$2,3) On | echo 4 -a *** Value of shitlist for $$2 ( $+ $address($$2,3) $+ ) is now ŸONŸ! | halt }
  if ($2 == off) { writeini $mircdirver.ini Shitonoff $address($$2,3) Off | echo 4 -a *** Value of shitlist for $$2 ( $+ $address($$2,3) $+ ) is now ŸOFFŸ! | halt }
}
;State Of The Art Shitlist [END]
