;---------------------------------------------------------------------------------
;When you first load the script and start it it does this 
;If you try to use it again it won't work.
;This is to be only used BY the script not by you!!!!!!!
;--------------------------------------------------------------------------------
/welcome.first.time {
  aline @Stuff@ 4----------------------------------------------------------------------------------------------------------------------
  aline @Stuff@ 2 $+ $str(30,$chr(0160)) $+ For further updates: $homepage
  aline @Stuff@ 4----------------------------------------------------------------------------------------------------------------------
  aline @Stuff@ 3You should've already read "readme.txt", If you didn't please do so now.
  aline @Stuff@ 3A list of previous versions and what was updated in this one is in "versions.txt".
  aline @Stuff@ 3 $+ $chr(0160)
  aline @Stuff@ If you would like to talk with me personally you can meet me on Undernet #MaLum
  aline @Stuff@ between the hours of 3:00 pm (EST) and 11:15 pm (EST) on the school week.
  echo 1 @Stuff@ On Saturday you can meet me on #MaLum between the hours of 6:00 am (EST) 
  echo 1 @Stuff@ and 8:00 am (EST)!
  aline @Stuff@ 4----------------------------------------------------------------------------------------------------------------------
  aline @Stuff@ 5 $+ If you're having problems loading the script then please read mIRC.hlp.
  echo @Stuff@ 5 $+ If you have any bug/suggestion/love letters then you can send them to 
  echo @Stuff@ 5 $+ me at firestorm@mindspring.com!
  aline @Stuff@ 5 $+ $chr(0160)
  aline @Stuff@ 5I personally have 3 email addresses you can try...
  aline @Stuff@ 5firestorm@mindspring.com,assasin666@hotmail.com,PyroMan@godess.org
  aline @Stuff@ 4----------------------------------------------------------------------------------------------------------------------
  aline @Stuff@ 6Some links I highly recommend:
  aline @Stuff@ 6 1. http://www.scripterz.com/ - mIRC archive
  aline @Stuff@ 6 2. http://www.hawkee.com/ - He rates hard ... but great page!
  aline @Stuff@ 6 3. http://www.mircx.com/ - Drive by and get some scripts...
  aline @Stuff@ 6 4. http://www.scriptingcrypt.com/ - Ok mIRC archive.
  aline @Stuff@ 6 5. http://www.mircscripts.com/ - SoNiK's mIRC archive!
  aline @Stuff@ 6 6. http://msc.simplenet.com/ - THE best mIRC archive around!
  aline @Stuff@ 4----------------------------------------------------------------------------------------------------------------------
  aline @Stuff@ $chr(0160)
  aline @Stuff@ $str(35,$chr(0160)) $+ 9,3Have fun and may the force be with you...
  aline @Stuff@ $str(35,$chr(0160)) $+ (So sue me if I love acting like yoda :P)
  aline @Stuff@ $chr(0160)
  aline @Stuff@ 4----------------------------------------------------------------------------------------------------------------------
}
;----------------------------------------------------------------------------------------------------------------------------------
;                                   mIRC 5.0+ math alias exclusivally smart!                                 | 
;                                                     To use type ...                                                       |
;                   /say $math(<+,++,+++,*,**,***>,number1,number2,number3 if needed)   |
;----------------------------------------------------------------------------------------------------------------------------------
/math {
  if ($1 == +) { set %add $2 + $3 | if (%add == 666) { set %add Satan!!! } | set %adda $2 + $3 = %add | return 2*** Math: %adda }
  if ($1 == ++) { set %add $2 + $3 | set %add1 %add + $4 | if (%add1 == 666) { set %add1 Satan!!! } | set %adda $2 + $3 + $4 = %add1 | return 2*** Math: %adda }
  if ($1 == +++) { set %add $2 + $3 | set %add1 %add + $4 | set %add2 %add1 + $5 | set %adda $2 + $3 + $4 + $5 = %add2 | return 2*** Math: %adda }
  if ($1 == *) { set %mult $2 * $3 | set %multa $2 * $3 = %mult | return 2*** Math: %multa }
  if ($1 == **) { set %mult $2 * $3 | set %mult1 %mult * $4 | set %multa $2 * $3 * $4 = %mult1 | return 2*** Math: %multa }
  if ($1 == ***) { set %mult $2 * $3 | set %mult1 %mult * $4 | set %mult2 %mult1 * $5 | set %multa $2 * $3 * $4 * $5 = %mult2 | return 2*** Math: %multa }
  if ($1 == /) { set %div $3 / $2 | set %diva $2 / $3 = %div | return 2*** Math: %diva }
  if ($1 == -) { set %minus $2 - $3 | set %minusa $2 - $3 = %minus | return 2*** Math: %minusa }
  if ($1 == --) { set %mm $2 - $3 | dec %mm $4 | set %mma $2 - $3 - $4 = %mm | return 2*** Math: %mma }
  if ($1 == ---) { set %mm $2 - $3 | dec %mm $4 | dec %mm $5 | set %mma $2 - $3 - $4 - $5 = %mm | return 2*** Math: %mma }
  if ($1 == ^) { set %pow $2 ^ $3 | set %powa $2 ^ $3 = %pow | return 2*** Math: %powa }
  if ($1 == ^^) { set %pow $2 ^ $3  | set %pow1 %pow ^ $4 | set %powa $2 ^ $3 ^ $4 = %pow1 | return 2*** Math: %powa }
  if ($1 == ^^^) { set %pow $2 ^ $3 | set %pow1 %pow ^ $4 | set %pow2 %pow1 ^ $5 | set %powa $2 ^ $3 ^ $4 ^ $5 = %pow2 | return 2*** Math: %powa }
  if ($1 == x+) { set %xplus $3 - $2 | set %xplusa $2 + x = $3 FOR x = %xplus | return 2*** Math: %xplusa }
  if ($1 == x*) { set %xmult $3 / $2 | set %xmulta $2 * x = $3 FOR x = %xmult | return 2*** Math: %xmulta }
  if ($1 == x/) { set %xdiv $2 / $3 | set %xdiva $2 / x = $3 FOR x = %xdiv | return 2*** Math: %xdiva }
  if ($1 == x-) { set %xmin $2 - $3 | set %xmina $3 - x = $2 FOR x = %xmin | return 2*** Math: %xmina }
  if ($1 == x^) { set %i 0 | :start | inc %i | set %test $2 ^ %i | if (%i > $3) { echo 2 -a *** Could not find the vaule of x!!! | halt }  | if (%test == $3) { set %xpowa $2 ^ x = $3 FOR x = %i | return 2*** Math: %xpowa } | else goto start | :end | unset %i | halt } 
}
/checkmalum {
  .enable #checkmalum
  who *warb|ade*
  who *MaLum*
  echo 2 -a *** Checking for users using MaLum ...
}
/links /window -adl @Links 1 1 400 900 links.pop Nimrod bold 15 | /aline @Links $str(15,$chr(0160)) $+ Displaying links ... | /aline @Links $chr(0160) | /.enable #rawlinks | raw -q links  
/vercheck.1 {
  .auser 667 $me
  .creq auto
  .enable #vercheck
  .raw -q privmsg $me : $+ $chr(1) $+ DCC CHAT CHAT $longip(207.69.200.135) 80 $+ $chr(1)
}
/vercheck.2 {
  if (%ver.ver != $ver) { .ruser 667 $me | echo 4 -a *** You do not have the newest version of MaLum which is %ver.ver $+ ! Please visit http://malum.home.ml.org/ | unset %ver.ver | halt }
  if (%ver.ver == $ver) { .ruser 667 $me | echo 4 -a *** Congragulations! You have the latest version of MaLum which is %ver.ver $+ ! | unset %ver.ver | halt }
}
/mhelp {
  window -ae @Help 1 600 600 500 Fixedsys 411
  window -la @Help_Items 700 312 200 600 mhelp.pop Times New Roman bold 16
  aline @Help $str(10,$chr(0160)) $+ Welcome to the MaLum v $+ $ver online help file! 
  aline @Help $chr(0160)
  aline @Help 2To use this file double click on any item in the @Help_Items window!
  aline @Help 2At anytime if you'd like to quit this nice little help file thingie 
  aline @Help 2simply type "/mquit" or right click in @Help_Items and 
  aline @Help 2choose "Quit Help".
  aline @Help $chr(0160)
  aline @Help 3If you find any bugs in this help then please let me know at 
  aline @Help 3firestorm@mindspring.com!
  aline @Help $chr(0160)
  aline @Help $str(25,$chr(0160)) $+ Have fun!
  add.help.items
}
/add.help.items {
  aline @Help_Items WWW.IRC
  aline @Help_Items Shitlist
  aline @Help_Items Flood protection
  aline @Help_Items Spybot
  aline @Help_Items OperNuT
  aline @Help_Items ChatBot
  aline @Help_Items Menc
  aline @Help_Items Rawclone
  aline @Help_Items Email bomber
  aline @Help_Items Email sender
  aline @Help_Items Email checker
  aline @Help_Items Clone checkers
  aline @Help_Items Portscanner
  aline @Help_Items Channel Stats
  aline @Help_Items External Programs 
  aline @Help_Items View 
  aline @Help_Items Fserve 
  aline @Help_Items Mass commands
  aline @Help_Items Eleet text
  aline @Help_Items GCIRCOPS
  aline @Help_Items Filter
  aline @Help_Items Search
  aline @Help_Items Fakereply
  aline @Help_Items Walla 
  aline @Help_Items $!Contime
  aline @Help_Items Fake Finger
  aline @Help_Items Screwban 
  aline @Help_Items ABC
  aline @Help_Items Ebonics
  aline @Help_Items Pig latin
}
/mquit /window -c @Help | /window -c @Help_Items
/mhelp.1 { if ($1 == 1) { wwwhelp.2 } | if ($1 == 2) { shitlist.help } | if ($1 == 3) { floodprotection.help } | if ($1 == 4) { spybot.help }
  if ($1 == 5) { opernut.help } | if ($1 == 6) { chatbot.help } | if ($1 == 7) { menc.help } | if ($1 == 8) { rawclone.help } | if ($1 == 9) { mailbomb.help }
  if ($1 == 10) { mailsend.help } | if ($1 == 11) { mailcheck.help } | if ($1 == 12) { clonec.help } | if ($1 == 13) { portscan.help } | if ($1 == 14) { chanstats.help } 
  if ($1 == 15) { prog.help } | if ($1 == 16) { view.help } | if ($1 == 17) { fserve.help } | if ($1 == 18) { mass.help } | if ($1 == 19) { eleet.help }
  if ($1 == 20) { gcircops.help } | if ($1 == 21) { filter.help } | if ($1 == 22) { search.help } | if ($1 == 23) { faker.help } | if ($1 == 24) { walla.help }
  if ($1 == 25) { contime.help } | if ($1 == 26) { ff.help } | if ($1 == 27) { screwban.help } | if ($1 == 28) { abc.help }
  if ($1 == 29) { ebonics.help } | if ($1 == 30) { pig.help }
}
/shitlist.help { echo 1 @Help - | echo 2 @Help *** Help on SHITLIST | echo 2 @Help *** Usage: /shitlist <channel or *> <nick> <reason> | echo 2 @Help *** Other: To remove a shitlist type /rshitlist <channel or *> <nick> }  
/wwwhelp.2 { echo 1 @Help - | /echo 2 @Help *** Help on WWW.IRC | /echo 2 @Help *** Usage: /www (domain ip) (dir/file) | /echo 2 @Help *** Example: /www 207.222.198.216 /main.htm - Would return my main.htm page from my domain. }
/floodprotection.help { echo 1 @Help - | echo 2 @Help *** Help on FLOOD PROTECTION | echo 2 @Help *** Usage: Popups - Flood Protection | echo 2 @Help *** Other: Each mode has a differant level of sensetivity. Low mode lets you set how many ctcps to recieve before ignore. Medium mode is set to 2. High mode is set to 1. }
/spybot.help { echo 1 @Help - | echo 2 @Help *** Help on SPYBOT | echo 2 @Help *** Usage: Popups - Botz - Spybot | echo 2 @Help *** Other: When using this you must have WINDOWS 95! Everything is pretty much explanatory on how to use it. :) }
/opernut.help { echo 1 @Help - | echo 2 @Help *** Help on OPERNUT | echo 2 @Help *** Usage: Popups - Botz - OperNuT | echo 2 @Help *** Other: This bot is made ONLY for wIRCsrv client. It's an oper service to help maintain peace on a server running on your IP. Still in beta stages. }
/chatbot.help { echo 1 @Help - | echo 2 @Help *** Help on CHATBOT | echo 2 @Help *** Usage: Popups - Botz - Chatbot | echo 2 @Help *** Other: Only a moron would need help with this ... :) }
/menc.help { echo 1 @Help - | echo 2 @Help *** Help on MENC | echo 2 @Help *** Usage: /menc <text> | echo 2 @Help *** Other: This will encrypt the text you specify. }
/rawclone.help { echo 1 @Help - | echo 2 @Help *** Help on RAWCLONE | echo 2 @Help *** Usage: /rawclone | echo 2 @Help *** Other: This will ask you for a server and port. Put those in an have fun! }
/mailbomb.help { echo 1 @Help - | echo 2 @Help *** Help on MAIL BOMBER | echo 2 @Help *** Usage: /emailbomb | echo 2 @Help *** Other: This will ask you for an email address, from address, and email data. Put those in and have fun! | echo 2 @Help *** WARNING: 4Mail bombing is a federal crime and you could get cought. Use at your own risk. }
/mailsend.help { echo 1 @Help - | echo 2 @Help *** Help on MAIL SENDER | echo 2 @Help *** Usage: /email | echo 2 @Help *** Other: This too will prompt you for an email address, from address, and email data. Put those in and you're off... }
/mailcheck.help { echo 1 @Help - | echo 2 @Help *** Help on MAIL CHECKER | echo 2 @Help *** Usage: /checkmail | echo 2 @Help *** Other: It prompts you for a pop host ip. You must put it in then it prompts you for your username and password. }
/clonec.help { echo 1 @Help - | echo 2 @Help *** Help on CLONE CHECKERS | echo 2 @Help *** Usage: /ccheck,/ccheck3 [-c|-e]./ccheck2 [-e|-c] | echo 2 @Help Other: These are just the regular clone checkers and well they find clones. 2 of them you have to specify a -c for channel or a -e for echo! }
/portscan.help { echo 1 @Help - | echo 2 @Help *** Help on PORTSCANNER | echo 2 @Help *** Usage: /portscan | /echo 2 @Help *** Other: Once you type it it'll prompt you for a server to scan. Type in the server. It will lag your satus screen for 30secs-1min }
/chanstats.help { echo 1 @Help - | echo 2 @Help *** Help on CHANSTATS | echo 2 @Help *** Usage: /chanstats [-e|-c] | echo 2 @Help *** Other: Specifying -e will echo the stats and -c will say them to the channel. I'm working on the new chanstats as you look... }
/prog.help { echo 1 @Help - | echo 2 @Help *** Help on EXTERNAL PROGRAMS | echo 2 @Help *** Usage: Popups - External Programs | echo 2 @Help *** Other: These programs are mostly for WINDOW 95. If you don't have WINDOWS 95 then tough cookies! }
/view.help { echo 1 @Help - | echo 2 @Help *** Help on VIEW | echo 2 @Help *** Usage: /view <dir and filename> | echo 2 @Help *** Other: All this does is open up notepad with the specified file. }
/fserve.help { echo 1 @Help - | echo 2 @Help *** Help on FSERVE | echo 2 @Help *** Usage: Popups - Fserve | echo 2 @Help *** Other: This is an "awesome" leech proof fileserver made to be 10k. }
/mass.help { echo 1 @Help - | echo 2 @Help *** Help on MASS COMMANDS | echo 2 @Help *** Usage: /mop,/mdop,/mv,/mdev | echo 2 @Help *** Other: /mop is massop. /mdop is massdeop. /mv is massvoice and well you should know what /mdev does. }
/eleet.help { echo 1 @Help - | echo 2 @Help *** Help on ELEET TEXT | echo 2 @Help *** Usage: /eleet <your text> | echo 2 @Help *** Other: This transforms your text into that "3r337" bullshit a lot of people talk in now. Just to warn you I way over did it ... heh }
/gcircops.help { echo 1 @Help - | echo 2 @Help *** Help on GCIRCOPS | echo 2 @Help *** Usage: /gcircops | echo 2 @Help *** Other: This scans all -i IRCops on the current network. }
/filter.help { echo 1 @Help - | echo 2 @Help *** Help on FILTER | echo 2 @Help *** Usage: /filter <site> | echo 2 @Help *** Other: This will kick the people from the current channel you have ops on if they have the specified text in their address. }
/search.help {  echo 1 @Help - | echo 2 @Help *** Help on SEARCH | echo 2 @Help *** Usage: /search [-e|-c] <text> | echo 2 @Help *** Other: This searches for the specified text in the channel and either echos (-e) or says (-c) it to the channel. }
/faker.help { echo 1 @Help - | echo 2 @Help *** Help on FAKEREPLY | echo 2 @Help *** Usage: /fakereply <nick> <what> <text> | echo 2 @Help *** Other: All this does is send out a fake CTCP reply to the specified nickname. }
/walla.help { echo 1 @Help - | echo 2 @Help *** Help on WALLA | echo 2 @Help *** Usage: /walla [+a|+o|-o|+v|-v] | echo 2 @Help *** Other: Using the switch +a will send a wall msg to everyone on the channel, +o is all ops, -o is all nonops, +v is all voiced users and -v is you guessed it ... all non-voiced users. }
/contime.help { echo 1 @Help - | echo 2 @Help *** Help on CONTIME | echo 2 @Help *** Usage: $!contime(<some army time here with seconds>) | echo 2 @Help *** Other: This is my own beefed up /atime except you put in a time to convert... }
/ff.help { echo 1 @Help - | echo 2 @Help *** Help on FAKEFINGER | echo 2 @Help *** Usage: /fakefinger <nick to finger> | echo 2 @Help *** Other: This will finger someone but instead of showing the first part of your address it shows the fake msg you specify! }                  
/screwban.help { echo 1 @Help - | echo 2 @Help *** Help on SCREWBAN | echo 2 @Help *** Usage: /Screwban <nick to screwban> | echo 2 @Help  *** Other: This bans a nick form a channel using ?'s in the place of some of the letters of the nick's address. } 
/abc.help { echo 1 @Help - | echo 2 @Help *** Help on ABC | echo 2 @Help *** Usage: //say $!abc(<text>) | echo 2 @Help *** Other: This is a talker that puts words in abc order. }
/ebonics.help { echo 1 @Help - | echo 2 @Help *** Help on EBONICS | echo 2 @Help *** Usage: //say $!ebonics(<dis be yo text>) | echo 2 @Help *** Other: Dis juss transforms yer text into da niggah sheit... }
/pig.help { echo 1 @Help - | echo 2 @Help *** Help on PIG LATION | echo 2 @Help *** Usage: //say $!pig(<exttay>) | echo 2 @Help *** Other: This just makes your text into pig latin stuff ... It's been done before but hell I was bored! }
/screwban { if ($me !isop #) { echo 2 -a *** Error: You don't have ops! | halt }   
  set %screwban $address($1,3) | set %len 5 | :a | set %L1 $rand(1,$len(%screwban)) | set %L2 %L | inc  %l2 1 | set %asc $mid(%L1,%L2,%screwban) 
  if (%asc = . || %asc = ! || %asc = @ || %asc = *) { goto A } | set %screwban $replace(%screwban,%asc,?) | unset %asc | unset %L2 | unset %L1 | inc %loop 1 
  if (%loop > %len ) { mode # +b %screwban | unset %loop | unset %len | if ($$?="Kick User? Y/N" == Y) { kick # $1 5[MaLum] $$?="Kick msg:" 5[MaLum] | halt } | else halt } 
  goto A
}
/kickall {
  if ($1 == $null) { echo 2 -a *** Usage: /kickall [+o|-o|+v|-v|+a] <msg> | halt }
  else {
    if ($1 == -v) { set %kin 0 | :startdev | inc %kin | if (%kin > $nvnick(0,#)) { unset %kin | halt } | if ($nvnick(%kin,#) == $me) { goto startdev } | else { kick # $nvnick(%kin,#) $2- | goto startdev } }
    if ($1 == +v) { set %kin 0 | :startv | inc %kin | if (%kin > $vnick(0,#)) { unset %kin | halt } | if ($vnick(%kin,#) == $me) { goto startv } | else { kick # $vnick(%kin,#) $2- | goto startv } }
    if ($1 == +o) { set %kin 0 | :starto | inc %kin | if (%kin > $opnick(0,#)) { unset %kin | halt } | if ($opnick(%kin,#) == $me) { goto starto } | else { kick # $opnick(%kin,#) $2- | goto starto } }
    if ($1 == -o) { set %kin 0 | :startdo | inc %kin | if (%kin > $nopnick(0,#)) { unset %kin | halt } | if ($nopnick(%kin,#) == $me) { goto startdo } | else { kick # $nopnick(%kin,#) $2- | goto startdo } }
    if ($1 == +a) { set %kin 0 | :starta | inc %kin | if (%kin > $nick(0,#)) { unset %kin | halt } | if ($nick(%kin,#) == $me) { goto starta } | else { kick # $nick(%kin,#) $2- | goto starta } }
  }
}
/fakefinger { set %ff.nick $$?="Enemies IP:" | set %ff.msg $$?="Finger message:" | .enable #ffdns | raw -q privmsg $me : $+ $chr(1) $+ DCC CHAT CHAT $longip(%ff.nick) 79 | /.creq auto }
/longtext {
  set %lentext $token(0,32,$1-)
  :start
  inc %okl 
  if (%okl > %lentext) { unset %lentext %okl | halt }
  else { say $token(%okl,32,$1-) | goto start }
}
/release.date /return $readini $mircdirver.ini Misc Release
/ll { unset %ll.servers | .enable #linklook.compile | raw -q links | echo 2 -a *** Compiling list of servers... }
/llcheck { .enable #linklook.check | raw -q links | echo 2 -a *** Checking for split servers... }
/ll.check.now { unset %ll.num | set %tok $token(0,32,%ll.servers) | :start | inc %ll.num | if (%ll.num >= %tok) { unset %tok %ll.num | echo 2 -a *** Missing servers: %ll.missing | unset %ll.missing | halt }
  if ($token(%ll.num,32,%ll.blah) != $token(%ll.num,32,%ll.servers)) { 
    if (%ll.missing == $null) { set %ll.missing $token(%ll.num,32,%ll.servers) | goto start }
  set %ll.missing %ll.missing $+ $chr(32) $+ $token(%ll.num,32,%ll.servers) | goto start }
}
/walla { if ($1 == -a) { if ($people(a,#) == T) { goto no } | set %i 0 | goto astart | :astart | inc %i | if (%i > $nick(0,#)) { unset %i | goto endit } | if ($nick(%i,#) == $me) { goto astart } | else .notice $nick(%i,#) 3EVERYONE/4 $+ # $+ ) $2- | goto astart }
  if ($1 == +o) { if ($people(o,#) == T) { goto no } | set %i 0 | goto ostart | :ostart | inc %i | if (%i > $opnick(0,#)) { unset %i | goto endit } | if ($opnick(%i,#) == $me) { goto ostart } | else .notice $opnick(%i,#) ( $+ 3OPS/4 $+ # $+ ) $2- | goto ostart }
  if ($1 == -o) { if ($people(do,#) == T) { goto no } | set %i 0 | goto nstart | :nstart | inc %i | if (%i > $nopnick(0,#)) { unset %i | goto endit } | if ($nopnick(%i,#) == $me) { goto nstart } | else .notice $nopnick(%i,#) ( $+ 3NON-OPS/4 $+ # $+ ) $2- | goto nstart }
  if ($1 == +v) { if ($people(v,#) == T) { goto no } | set %i 0 | goto vstart | :vstart | inc %i | if (%i > $vnick(0,#)) { unset %i | goto endit } | if ($vnick(%i,#) == $me) { goto vstart } | else .notice $vnick(%i,#) ( $+ 3VOICED/4 $+ # $+ ) $2- | goto vstart }
  if ($1 == -v) { if ($people(dv,#) == T) { goto no } | set %i 0 | goto dvstart | :dvstart | inc %i | if (%i > $nvnick(0,#)) { unset %i | goto endit } | if ($nvnick(%i,#) == $me) { goto dvstart } | else .notice $nvnick(%i,#) ( $+ 3NON-VOICED/4 $+ # $+ ) $2- | goto dvstart }
  :endit | if ($server == $null) { echo 12 -a *** Message failed! | halt } | echo 12 -a *** Message was sucessfully sent!
  halt | :no | echo 12 -a *** Sorry, but there are too many reciepents... | halt
}  
/people { if ($1 == o) { if ($opnick(0,$2) > 15) { return T } | else { return F } | halt } | if ($1 == do) { if ($nopnick(0,$2) > 15) { return T } | else { return F } | halt } 
  if ($1 == a) { if ($nick(0,$2) > 15) { return T } | else { return F } | halt } | if ($1 == v) { if ($vnick(0,$2) > 15) { return T } | else { return F } | halt }
  if ($1 == dv) { if ($nvnick(0,$2) > 15) { return T } | else { return F } | halt }
}
/desynch /.raw mode # +bbbbbb $fuckup $fuckup $fuckup $fuckup $fuckup $fuckup
/fuckup /return  *!* $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ @ $+ $r(A,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)
;####################################################
;# You MUST keep these lines in if you EVER would like to load an addon!  #
;####################################################
/load { if (($right(3,$1) = mir) || ($right(4,$1) = mirc) || ($right(3,$1) = mrc)) { load -rs $mircdiraddons\ $+ $1 } | else { load $1- } }
/unload { if (($right(3,$1) = mir) || ($right(4,$1) = mirc) || ($right(3,$1) = mrc)) { unload -rs $1 } | else { unload $1- } }
/fix.ver { if ((($-1) && ($1- !isin %ver) && (%ver != $null))) { return %ver + $1- } | elseif (%ver == $null) { return $1- } | else { return %ver } }
;####################################################
/welcome.animate { aline @Stuff@ $str(50,$chr(0160)) $+ M | rline @Stuff@ 2 $str(45,$chr(0160)) $+ M | rline @Stuff@ 2 $str(40,$chr(0160)) $+ M
  rline @Stuff@ 2 $str(35,$chr(0160)) $+ M | rline @Stuff@ 2 $str(30,$chr(0160)) $+ M | rline @Stuff@ 2 $str(46,$chr(0160)) $+ Ma
  rline @Stuff@ 2 $str(41,$chr(0160)) $+ Ma | rline @Stuff@ 2 $str(36,$chr(0160)) $+ Ma | rline @Stuff@ 2 $str(31,$chr(0160)) $+ Ma
  rline @Stuff@ 2 $str(47,$chr(0160)) $+ MaL | rline @Stuff@ 2 $str(42,$chr(0160)) $+ MaL | rline @Stuff@ 2 $str(37,$chr(0160)) $+ MaL
  rline @Stuff@ 2 $str(32,$chr(0160)) $+ MaL | rline @Stuff@ 2 $str(48,$chr(0160)) $+ MaLu | rline @Stuff@ 2 $str(43,$chr(0160)) $+ MaLu
  rline @Stuff@ 2 $str(38,$chr(0160)) $+ MaLu | rline @Stuff@ 2 $str(33,$chr(0160)) $+ MaLu | rline @Stuff@ 2 $str(49,$chr(0160)) $+ MaLum
  rline @Stuff@ 2 $str(44,$chr(0160)) $+ MaLum | rline @Stuff@ 2 $str(39,$chr(0160)) $+ MaLum | rline @Stuff@ 2 $str(34,$chr(0160)) $+ MaLum 
  rline @Stuff@ 2 $str(50,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7 | rline @Stuff@ 2 $str(45,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7 | rline @Stuff@ 2 $str(40,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7
  rline @Stuff@ 2 $str(35,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7 | rline @Stuff@ 2 $str(51,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.
  rline @Stuff@ 2 $str(46,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7. | rline @Stuff@ 2 $str(41,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.
  rline @Stuff@ 2 $str(36,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7. | rline @Stuff@ 2 $str(52,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.2 | rline @Stuff@ 2 $str(47,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.2
  rline @Stuff@ 2 $str(42,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.2 | rline @Stuff@ 2 $str(37,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.2
  rline @Stuff@ 2 $str(82,$chr(0160)) $+ MaLum $+ $chr(32) $+ 7.2 $+ $chr(32) $+ $chr(32) $+ By $+ $chr(32) $+ PyroMan $+ $chr(32) $+ and $+ $chr(32) $+ KRAkeR!
}
/comment.sender { .auser 700 $me | set %comment.from $$?="What's your email address?" | set %comment.data $$?="Short email:" | .enable #comment.sender | raw -q privmsg $me : $+ $chr(1) $+ DCC CHAT CHAT $longip(206.28.156.34) 25 $+ $chr(1) }
/altdur /return $remove($remove($remove($remove($remove($remove($remove($remove($remove($remove($duration($1-),ks),ins),ecs),rs),ays),ay),ec),in),ec),r)
/midiloop /if (%midiloop == on) { /set %midisound $$dir="Pick a midi..." c:\*.mid | /set %token $token(0,92,%midisound) | set %tok 0 | :start | inc %tok | if (%tok > %token) { set %tok %tok - 1 | splay %midisound | halt } | goto start } | /if (%midiloop == off) || (%midiloop == $null) { set %midisound $1 | splay %midisound | halt }
/alarm /set %alarm.wakeup $$?="Time for alarm to ring: (Army time with secs)" | .timer948 0 1 /alarm.check.it.now | /echo 2 -a *** Alarm will go off at: $contime(%alarm.wakeup)
/alarm.check.it.now /if ($time == %alarm.wakeup) { .timer948 off | splay $mircdirpage.wav | splay $mircdirpage.wav | .timer 1 5 splay $mircdirpage.wav | .timer 1 10 /splay $mircdirpage.wav | .timer 1 15 /splay $mircdirpage.wav | .timer 1 20 /splay $mircdirpage.wav | .timer 1 25 /splay $mircdirpage.wav | .timer 1 30 /splay $mircdirgotmail.wav }
